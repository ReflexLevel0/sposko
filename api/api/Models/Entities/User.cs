// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace sposko
{
    [Table("users")]
    public class User
    {
        [Column("id", IsPrimaryKey = true)] public Guid Id { get; set; } // uuid
        [Column("username")] public string? Username { get; set; } // character varying(32)
        [Column("password")] public string? Password { get; set; } // character varying(64)
        [Column("first_name")] public string? FirstName { get; set; } // character varying(64)
        [Column("last_name")] public string? LastName { get; set; } // character varying(64)
        [Column("phone_number")] public string? PhoneNumber { get; set; } // character varying(32)
        [Column("email")] public string? Email { get; set; } // character varying(64)

        #region Associations
        /// <summary>
        /// administrators_id_fkey backreference
        /// </summary>
        [Association(ThisKey = nameof(Id), OtherKey = nameof(Administrator.Id))]
        public Administrator? Administrators { get; set; }

        /// <summary>
        /// parents_id_fkey backreference
        /// </summary>
        [Association(ThisKey = nameof(Id), OtherKey = nameof(Parent.Id))]
        public Parent? Parents { get; set; }

        /// <summary>
        /// trainers_id_fkey backreference
        /// </summary>
        [Association(ThisKey = nameof(Id), OtherKey = nameof(Trainer.Id))]
        public Trainer? Trainers { get; set; }
        #endregion

        public static explicit operator UserDTO(User user)
        {
            UserDTO output = new UserDTO
            {
                Id = user.Id,
                FirstName = user.FirstName,
                LastName = user.LastName,
                Email = user.Email,
                Username = user.Username,
                Password = user.Password,
                PhoneNumber = user.PhoneNumber
            };
            return output;
        }
    }
}
